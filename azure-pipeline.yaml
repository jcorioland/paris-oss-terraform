# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
  containers:
  - container: 'ossparis_network_test'
    image: demo/network_test:$(tag)
    endpoint: acrossparis  

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'd734c987-5265-4759-8d43-dbd1deca5dc2'
  imageRepository: 'demo/network_test'
  containerRegistry: 'acrossparis.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build Container Image and Run Tests
  jobs:  
  - job: Build
    displayName: Build Container Image and Run Tests
    pool:
      vmImage: $(vmImageName)
    steps:
    # e28912f1-0114-4464-802a-a3a35437fd16 = Docker ?!?
    - task: e28912f1-0114-4464-802a-a3a35437fd16@2
      displayName: Build Tests Container Image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - script: |
        mkdir ./test_output
        docker run \
          -e SERVICE_PRINCIPAL_CLIENT_ID=$(SERVICE_PRINCIPAL_CLIENT_ID) \
          -e SERVICE_PRINCIPAL_CLIENT_SECRET=$(SERVICE_PRINCIPAL_CLIENT_SECRET) \
          -e ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID) \
          -e ARM_CLIENT_ID=$(ARM_CLIENT_ID) \
          -e ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET) \
          -e ARM_TENANT_ID=$(ARM_TENANT_ID) \
          -v $(System.DefaultWorkingDirectory)/test_output:/go/src/ossparis-demo/test_output \
          $(containerRegistry)/$(imageRepository):$(tag)
      displayName: Run tests in container
      env:
        SERVICE_PRINCIPAL_CLIENT_ID: $(SERVICE_PRINCIPAL_CLIENT_ID)
        SERVICE_PRINCIPAL_CLIENT_SECRET: $(SERVICE_PRINCIPAL_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
        testResultsFiles: '$(System.DefaultWorkingDirectory)/test_output/report.xml'
        failTaskOnFailedTests: true